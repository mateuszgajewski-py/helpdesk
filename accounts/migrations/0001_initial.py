# Generated by Django 3.1.6 on 2021-02-09 13:05

import accounts.models
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='Imię')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='Nazwisko')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='Adres email')),
                ('is_staff', models.BooleanField(default=False, help_text='Sprawdza czy użytkownik może zobaczyć część administracyjną', verbose_name='Czy w personelu?')),
                ('is_active', models.BooleanField(default=True, help_text='Sprawdza czy użytkownik jest aktywny. Odznacz zamiast usuwania konta bądź w przypadku blokady', verbose_name='Czy aktywny')),
                ('date_joined', models.DateTimeField(auto_now_add=True, verbose_name='Data dołączenia')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'Użytkownik',
                'verbose_name_plural': 'Użytkownicy',
            },
            managers=[
                ('objects', accounts.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Administrator',
            fields=[
                ('user_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='accounts.user')),
            ],
            options={
                'verbose_name': 'Administrator',
                'verbose_name_plural': 'Administratorzy',
            },
            bases=('accounts.user',),
            managers=[
                ('objects', accounts.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Customer',
            fields=[
                ('user_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='accounts.user')),
            ],
            options={
                'verbose_name': 'Klient',
                'verbose_name_plural': 'Klienci',
            },
            bases=('accounts.user',),
            managers=[
                ('objects', accounts.models.UserManager()),
            ],
        ),
    ]
